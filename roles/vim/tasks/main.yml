---
- name: Copy vim vundle bootstrap
  copy:
    src: vundler.vim
    dest: /home/{{ user.name }}/.vundler.vim
  register: var_vim

- name: Copy vim .vimrc
  copy:
    src: vimrc
    dest: /home/{{ user.name }}/.vimrc

- name: Ensure directory exists
  file:
    path: /home/{{ user.name }}/.config/nvim
    state: directory
    recurse: yes

- name: Copy neovim config
  copy:
    src: vimrc
    dest: /home/{{ user.name }}/.config/nvim/init.vim
  register: var_neovim

- name: Copy YCM config
  copy:
      src: ycm_extra_conf.py
      dest: /home/{{ user.name }}/.ycm_extra_conf.py

- name: Copy tern config
  copy:
      src: tern-config
      dest: /home/{{ user.name }}/tern-config

- name: Set up Vundle
  git:
    dest: /home/{{ user.name }}/.vim/bundle/Vundle.vim
    repo: https://github.com/gmarik/Vundle.vim.git

- name: Download plugins if something changed
  command: vim +PluginInstall +qall -u ~/.vundler.vim
  when: var_vim.changed or var_neovim.changed

- name: Download dependencies for YCM
  command: chdir=/home/{{ user.name }}/.vim/bundle/YouCompleteMe git submodule update --init --recursive

- name: Check if YCM already compiled
  stat:
    path: /home/{{ user.name }}/.vim/bundle/YouCompleteMe/compiled
  register: result

- name: Ensure CMake is installed
  pacman:
    name: cmake
    state: present

- name: Compile YouCompleteMe
  command: chdir=/home/{{ user.name }}/.vim/bundle/YouCompleteMe ./install.py --clang-completer --go-completer --rust-completer
  when: not result.stat.exists

- name: Set YCM as compiled
  lineinfile:
    path: /home/{{ user.name }}/.vim/bundle/YouCompleteMe/compiled
    line: 'true'
    create: yes
  when: not result.stat.exists

- name: Install binaries for vim-go
  command: chdir=/home/{{ user.name }}/ vim +GoInstallBinaries +qall
